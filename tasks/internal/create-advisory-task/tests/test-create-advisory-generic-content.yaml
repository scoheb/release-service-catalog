---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: test-create-advisory-generic-content
spec:
  description: |
    Run the create-advisory task with the contentType param set as generic
    and check that an advisory url is emitted as a task result
  tasks:
    - name: run-task
      taskRef:
        name: create-advisory-task
      params:
        - name: advisory_json
          value: >-
            H4sIAAAAAAAAA2VSXUvDMBR9368Yed4a280hAXEig/kiMkEfZIyY3rVhbRKTdGwU/7s3bd1HDSXh3ntyzrm3qYmxOq2E38iUsDiZjE4JxUsgjKwgHS65H762aXIG7ME6qRVi4iiJJhcV5y3wEgvexGQ0GF4sIkxgxZ1RzuDAS1MA6y4yKO6Qxh8bzGr59oiROyptnHSBDpwfnmIEaiPFX74NemopOGGl8a3PBneZQnZdVJfVUzwiFrZgQQlA6U+Se28cozTVwkWd70jokiqNF8m636ZWHpQnrCay5FnDUTdZLhXY55BDze+KHyOpaUdItQHlPBe7uct5cjtj/CuFl8VHvy8LRjvptT0iic21M/FsbHOc35kiDIhnjfmCh+bQJOFW5NKD8JUN+rxMZ9M+ualsgTWzy9h/X60pkcLD2cMGL9z3W7lyhV7EPgyhJlt5AHxr9bXm0/tinNwkyRjf4DTADIp1c2ucZLrgKqPtEWmb0QNV4Gn4L8k8jmL8yPoHF26DX8WdCn7YAgAA
          # advisory_json string before `gzip -c|base64 -w 0` encoding:
          # {"product_id":123,"product_name":"Red Hat Product","product_version":"1.2.3","product_stream":"tp1",
          # "cpe":"cpe:/a:example:product:el8","type":"RHSA","synopsis":"test synopsis","topic":"test topic",
          # "description":"test description","solution":"test solution","references":["https://docs.example.com/notes"],
          # "content":{"images":[{"containerImage":"quay.io/example/helm@sha256:abdeNEW",
          # "repository":"rhosp16-rhel8/openstack","tags":["latest"],"architecture":"amd64",
          # "purl":"pkg:example/openstack@256:abcde?repository_url=quay.io/example/rhosp16-rhel8","cves":{"fixed":{
          # "CVE-2022-1234":{"packages":["pkg:golang/golang.org/x/net/http2@1.11.1"]}}}}]}}
        - name: application
          value: "test-app"
        - name: origin
          value: "not-existing-origin"
        - name: config_map_name
          value: "create-advisory-test-cm"
        - name: advisory_secret_name
          value: "create-advisory-secret"
        - name: errata_secret_name
          value: "create-advisory-errata-secret"
        - name: internalRequestPipelineRunName
          value: $(context.pipelineRun.name)
        - name: contentType
          value: "generic"
    - name: check-result
      runAfter:
        - run-task
      params:
        - name: result
          value: $(tasks.run-task.results.result)
        - name: advisory_url
          value: $(tasks.run-task.results.advisory_url)
      taskSpec:
        params:
          - name: result
            type: string
          - name: advisory_url
            type: string
        steps:
          - name: check-result
            image: quay.io/konflux-ci/release-service-utils:7addbf5630418cea87bf66df33a05fdd57e43728
            script: |
              #!/usr/bin/env bash
              set -eux

              echo Test that result is Success
              test "$(params.result)" == Success

              echo Test that advisory_url was properly set
              test "$(params.advisory_url)" == \
                https://access.redhat.com/errata/RHSA-2024:1234
