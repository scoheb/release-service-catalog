---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: test-create-advisory-collector-partial
spec:
  description: |
    Run the create-advisory task which includes a collector partial and check that the advisory is generated correctly
  tasks:
    - name: run-task
      taskRef:
        name: create-advisory-task
      params:
        - name: advisory_json
          value: >-
            {"product_id":123,"product_name":"Red Hat Product","product_version":"1.2.3","product_stream":"tp1",
            "cpe":"cpe:/a:example:product:el8","type":"RHSA",
            "synopsis":"{%- if advisory.spec.type == 'RHSA' %} SECURITY{%- endif %} synopsis",
            "topic":"test topic",
            "description":"test description","solution":"test solution","references":["https://docs.example.com/notes"],
            "content":{"images":[{"containerImage":"quay.io/example/openstack@sha256:abde",
            "repository":"rhosp16-rhel8/openstack","tags":["latest"],"architecture":"amd64",
            "purl":"pkg:example/openstack@256:abcde?repository_url=quay.io/example/rhosp16-rhel8","cves":{"fixed":{
            "CVE-2022-1234":{"packages":["pkg:golang/golang.org/x/net/http2@1.11.1"]}}}}]}}
        - name: application
          value: "test-app"
        - name: origin
          value: "dev-tenant"
        - name: config_map_name
          value: "create-advisory-test-cm"
        - name: advisory_secret_name
          value: "create-advisory-secret"
        - name: errata_secret_name
          value: "create-advisory-errata-secret"
        - name: internalRequestPipelineRunName
          value: $(context.pipelineRun.name)
    - name: check-result
      runAfter:
        - run-task
      params:
        - name: result
          value: $(tasks.run-task.results.result)
        - name: advisory_url
          value: $(tasks.run-task.results.advisory_url)
      taskSpec:
        params:
          - name: result
            type: string
          - name: advisory_url
            type: string
        steps:
          - name: check-result
            image: quay.io/konflux-ci/release-service-utils:0b2f257d7a5c2a881c36c23f8ae3cd5e89db593a
            script: |
              #!/usr/bin/env bash
              set -eux

              echo Test that result is Success
              test "$(params.result)" == Success

              echo Test that advisory_url was properly set
              test "$(params.advisory_url)" == \
                https://gitlab.com/org/repo/-/blob/main/data/advisories/dev-tenant/2024/1234/advisory.yaml
