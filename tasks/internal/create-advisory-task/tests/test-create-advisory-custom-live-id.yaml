---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: test-create-advisory-custom-live-id
spec:
  description: |
    Run the create-advisory task and check that an advisory url is emitted as a task result.
    This test uses a custom advisory live id.
  tasks:
    - name: run-task
      taskRef:
        name: create-advisory-task
      params:
        - name: advisory_json
          value: >-
            H4sIAAAAAAAAA2VS32vCMBB+318hedZmrU5mYMwxBPcyhoPtYYhk6dkG2yRLUlGK//surfNHF0rLffflu++uVxNjdVoJv5IpYXEy7J8AxUsgjCwg7c257721MDkTtmCd1Ao5cZREw4uM8xZ4iQlvYtK/6V0cIkxQxTejnMGOl6YAdrzIoLhHGb9vOIv5+xNGbq+0cdIFOXC+d4qRqI0Uf3gbdKql4ISVxrc+G94lhOq6qC6zp7hPLKzBghKApb9I7r1xjNJUCxcdfUdCl1RpvEiW3Ta18qA8YTWRJc8ajbpBuVRgXwKGNX8qvo+kpkdBqg0o57nYTF3Ok7sx498pvM4+u31ZMNpJr+0eRWyunYnHA5vj/M4SYUA8a8wXPDSHJgm3IpcehK9sqM/LdDzqipvKFpgzm4z999WaEik8nj2s8MJDt5UrV+hFbMMQarKWO8Bdq69rPn/MBsltkgxwB0eBZrDYcW6Nk0wXXGW0/UTaZnRHFXga/ksyjaMYH7I84FkeOv0UcgvNfk8mk8PNL2XtKx/zAgAA
          # advisory_json string before `gzip -c|base64 -w 0` encoding:
          # {"product_id":123,"product_name":"Red Hat Product","product_version":"1.2.3","product_stream":"tp1",
          # "cpe":"cpe:/a:example:product:el8","type":"RHSA","synopsis":"test synopsis","topic":"test topic",
          # "description":"test description","solution":"test solution","references":["https://docs.example.com/notes"],
          # "content":{"images":[{"containerImage":"quay.io/example/openstack@sha256:abdeNEW",
          # "repository":"rhosp16-rhel8/openstack","tags":["latest"],"architecture":"amd64",
          # "purl":"pkg:example/openstack@256:abcde?repository_url=quay.io/example/rhosp16-rhel8","cves":{"fixed":{
          # "CVE-2022-1234":{"packages":["pkg:golang/golang.org/x/net/http2@1.11.1"]}}}}]},
          # "live_id":999}
        - name: application
          value: "test-app"
        - name: origin
          value: "not-existing-origin"
        - name: config_map_name
          value: "create-advisory-test-cm"
        - name: advisory_secret_name
          value: "create-advisory-secret"
        - name: errata_secret_name
          value: "create-advisory-errata-secret"
        - name: internalRequestPipelineRunName
          value: $(context.pipelineRun.name)
    - name: check-result
      runAfter:
        - run-task
      params:
        - name: result
          value: $(tasks.run-task.results.result)
        - name: advisory_url
          value: $(tasks.run-task.results.advisory_url)
      taskSpec:
        params:
          - name: result
            type: string
          - name: advisory_url
            type: string
        steps:
          - name: check-result
            image: quay.io/konflux-ci/release-service-utils:7addbf5630418cea87bf66df33a05fdd57e43728
            script: |
              #!/usr/bin/env bash
              set -eux

              echo Test that result is Success
              test "$(params.result)" == Success

              echo Test that advisory_url was properly set
              test "$(params.advisory_url)" == \
                https://access.redhat.com/errata/RHSA-2024:0999
