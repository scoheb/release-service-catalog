---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: test-create-advisory-fail
spec:
  description: |
    Run the create-advisory task and have it fail. Because that task doesn't use a workspace and the task always
    succeeds (due to how the internal tasks work), the only real way to check this is to examine the result and
    advisory_url task results. So, any failure will show itself in the same way, so this is the only failing
    unit test.

    The failure here is due to the `origin` param being `failing-tenant`, which is accounted for in mocks.sh
  tasks:
    - name: run-task
      taskRef:
        name: create-advisory-task
      params:
        - name: advisory_json
          value: >-
            H4sIAAAAAAAAA2VS30vDMBB+319R8rw1tuqQgDgRQd9kgi8y5ExvbbBNYpKOjeL/7qWd+1FDSbjvvnz33TUds84UrQwfqmAiyy+nB0BDg0ywJRbJE4TkZYDZkbBB55XRxMnSPL08yfjgEBpKBJux6SQ5WUzaqEq74CBwC42tUewvCqxvSCbses7y6fWeIr/Txnrloxz6kBxiIhqr5B8+BKNqBXrplA2Dz553CpG6qdvT7CGeModrdKglUul3VoVgveC8MNKne9+pNA3Xhi6y1bhNowPqwETHVANlr9H1KCiN7jliVPO7hV2qDN8LcmNR+wDya+EryK/nAj4LXIOqx405tMarYNyOVFxlvM3mM1fRAI8acUJQ9u5riN2RSwZOViqgDK2LBqAp5ldjcdu6mnL2qxT/jQ2uZIF3Rw8fdOF23MuZK/IiN3EKHVurLdJj685rPrw9zvKLPJ/RI7yKNEvF9oPrnZSmBl3y4UiNK/mWaww8/ph8kaUZfWz1Q4u2yS+hdGYS2QIAAA==
          # advisory_json string before `gzip -c|base64 -w 0` encoding:
          # {"product_id":123,"product_name":"Red Hat Product","product_version":"1.2.3","product_stream":"tp1",
          # "cpe":"cpe:/a:example:product:el8","type":"RHSA","synopsis":"test synopsis","topic":"test topic",
          # "description":"test description","solution":"test solution","references":["https://docs.example.com/notes"],
          # "content":{"images":[{"containerImage":"quay.io/example/openstack@sha256:abdefail",
          # "repository":"rhosp16-rhel8/openstack","tags":["latest"],"architecture":"amd64",
          # "purl":"pkg:example/openstack@256:abcde?repository_url=quay.io/example/rhosp16-rhel8","cves":{"fixed":{
          # "CVE-2022-1234":{"packages":["pkg:golang/golang.org/x/net/http2@1.11.1"]}}}}]}}
        - name: application
          value: "test-app"
        - name: origin
          value: "failing-tenant"
        - name: config_map_name
          value: "create-advisory-test-cm"
        - name: advisory_secret_name
          value: "create-advisory-secret"
        - name: errata_secret_name
          value: "create-advisory-errata-secret"
        - name: internalRequestPipelineRunName
          value: $(context.pipelineRun.name)
    - name: check-result
      runAfter:
        - run-task
      params:
        - name: result
          value: $(tasks.run-task.results.result)
        - name: advisory_url
          value: $(tasks.run-task.results.advisory_url)
      taskSpec:
        params:
          - name: result
            type: string
          - name: advisory_url
            type: string
        steps:
          - name: check-result
            image: quay.io/konflux-ci/release-service-utils:7addbf5630418cea87bf66df33a05fdd57e43728
            script: |
              #!/usr/bin/env bash
              set -eux

              echo Test that result is contains the failed command
              grep "false" <<< "$(params.result)"

              echo Test that advisory_url was not set
              test -z "$(params.advisory_url)"
