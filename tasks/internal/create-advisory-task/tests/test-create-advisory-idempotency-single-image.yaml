---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: test-create-advisory-idempotency-single-image
spec:
  description: |
    Verifies the idempotency behavior of the advisory creation process when a single container image is
    provided in the advisory_json. The input image (abde) is already included in an existing advisory.
    The task is expected to detect this and reuse the same advisory without duplicating or creating a new one.
    The test passes if the resulting advisory URL matches the one for the existing advisory.
    Note: This test does not validate the actual contents of the advisory file. It assumes that if the task
    succeeded and the advisory was created at the expected URL, then the logic to skip already released images worked.
  tasks:
    - name: run-task
      taskRef:
        name: create-advisory-task
      params:
        - name: advisory_json
          value: >-
            H4sIAAAAAAAAA31SUUvDMBB+368o97w1tuqQgKiIMN9kgi8yRkzPNqxNYpKOjeJ/99LOOSsYSsrdffd93yXpwDpTtDKsVQE8y8+nx4QWDQKHJRbJQoTkaUjDD2CLziujCZOleXp+UvHBoWioEGwG00lyskDayEo7Z4LjTjS2Rn5o5FhfEU3Y95jl4vmOIr/XxnrlIx36kBxjAhqr5Hd+CEZqBXrplA2Dzx53miJ2U7en1WM8BYfv6FBLJOlXqEKwnjNWGOnTg+9UmoZpQ42wGo9pdEAdgHegGlH2HF2fFUqje4w50vxoxT5Vhh0ImbGofRByc+srkV/OuXgrcDyUQ2u8Csbt/2OI5yPK3vs2S89gmkAt4ozkFYSTlQooQ+uiDdEU84uxjG1dTTW7Kflfe4M3WeDNj5s1NVyP/bjKeJvNZ64aLldu41l08K52SE+u+615//Iwy8/yfEZP8SLCLIkdjq93Uppa6JINv9S4ku2YxsDi9eS3WZrRB6tPWrRNvgAY72l13wIAAA==
          # advisory_json string before `gzip -c|base64 -w 0` encoding:
          # {"product_id":123,"product_name":"Red Hat Product","product_version":"1.2.3","product_stream":"tp1",
          # "cpe":"cpe:/a:example:product:el8","type":"RHSA","synopsis":"test synopsis","topic":"test topic",
          # "description":"test description","solution":"test solution","references":["https://docs.example.com/notes"],
          # "content":{"images":[{"containerImage":"quay.io/example/openstack@sha256:abde",
          # "repository":"quay.io/example/openstack","tags":["v1.0", "latest"],"architecture":"amd64",
          # "purl":"pkg:example/openstack@256:abcde?repository_url=quay.io/example/rhosp16-rhel8","cves":{"fixed":{
          # "CVE-2022-1234":{"packages":["pkg:golang/golang.org/x/net/http2@1.11.1"]}}}}]}}
        - name: origin
          value: dev-tenant
        - name: application
          value: "test-app"
        - name: config_map_name
          value: "create-advisory-test-cm"
        - name: advisory_secret_name
          value: "create-advisory-secret"
        - name: errata_secret_name
          value: "create-advisory-errata-secret"
        - name: internalRequestPipelineRunName
          value: $(context.pipelineRun.name)
    - name: check-result
      params:
        - name: advisory-url
          value: $(tasks.run-task.results.advisory_url)
        - name: result-status
          value: $(tasks.run-task.results.result)
      runAfter:
        - run-task
      taskSpec:
        params:
          - name: advisory-url
            type: string
          - name: result-status
            type: string
        steps:
          - name: verify-idempotency
            image: quay.io/konflux-ci/release-service-utils:7addbf5630418cea87bf66df33a05fdd57e43728
            script: |
              #!/usr/bin/env bash
              set -eux

              EXPECTED_URL="https://access.redhat.com/errata/RHSA-2024:1442"

              if [[ "$(params.result-status)" != "Success" ]]; then
                  echo "Task did not succeed. Status: $(params.result-status)"
                  exit 1
              fi

              if [[ "$(params.advisory-url)" != "$EXPECTED_URL" ]]; then
                  echo "Unexpected advisory URL: $(params.advisory-url)"
                  exit 1
              fi
