---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: test-create-advisory-fail-existing-id
spec:
  description: |
    Run the create-advisory task and have it fail. In this scenario it fails because an advisory with year 2024
    and the live id 1352 already exists (created in the git clone mock)
  tasks:
    - name: run-task
      taskRef:
        name: create-advisory-task
      params:
        - name: advisory_json
          value: >-
            H4sIAAAAAAAAA2VS30vDMBB+318x8rw1tm5DAuJEBH0TBV9kyJne2mCbxCQdG2X/u5d27kcNpeW++/Ldd9drmXUmb2T4VDkTaXY9OQIaamSCvWI+foIwfulhdiJs0HllNHHSJEuuzzI+OISaEsGmbDIanx0mbVSlt+AgcAu1rVAcLgqsbkgm7DrO69PbPUV+p431ykc59GF8jIlorJJ/eB8MquXopVM29D473jlE6qZqzrPHeMIcrtGhlkilP1gZgvWC89xInxx8J9LUXBu6yFbDNo0OqAMTLVM1FJ1G26GgNLrniFHNnwZ2iTL8IMiNRe0DyO+lLyGbLwR85bgGVQ0bc2iNV8G4Ham40nibLqaupAGeNOKEoOjcVxC7I5cMnCxVQBkaFw1AnS9mQ3HbuIpy9rsQ/431rmSOdycPn3ThdtjLhSvyIjdxCi1bqy3SsrWXNR/eH6fZVZZNaQlnkWap2GFwnZPCVKAL3n8S4wq+5RoDjz8mW6ZJSg9b7ems9oN+KrXBfsFn82w/+gUTdN/T9QIAAA==
          # advisory_json string before `gzip -c|base64 -w 0` encoding:
          # {"product_id":123,"product_name":"Red Hat Product","product_version":"1.2.3","product_stream":"tp1",
          # "cpe":"cpe:/a:example:product:el8","type":"RHSA","synopsis":"test synopsis","topic":"test topic",
          # "description":"test description","solution":"test solution","references":["https://docs.example.com/notes"],
          # "content":{"images":[{"containerImage":"quay.io/example/openstack@sha256:abdefail",
          # "repository":"rhosp16-rhel8/openstack","tags":["latest"],"architecture":"amd64",
          # "purl":"pkg:example/openstack@256:abcde?repository_url=quay.io/example/rhosp16-rhel8","cves":{"fixed":{
          # "CVE-2022-1234":{"packages":["pkg:golang/golang.org/x/net/http2@1.11.1"]}}}}]},
          # "live_id":1452}
        - name: application
          value: "test-app"
        - name: origin
          value: "failing-tenant"
        - name: config_map_name
          value: "create-advisory-test-cm"
        - name: advisory_secret_name
          value: "create-advisory-secret"
        - name: errata_secret_name
          value: "create-advisory-errata-secret"
        - name: internalRequestPipelineRunName
          value: $(context.pipelineRun.name)
    - name: check-result
      runAfter:
        - run-task
      params:
        - name: result
          value: $(tasks.run-task.results.result)
        - name: advisory_url
          value: $(tasks.run-task.results.advisory_url)
      taskSpec:
        params:
          - name: result
            type: string
          - name: advisory_url
            type: string
        steps:
          - name: check-result
            image: quay.io/konflux-ci/release-service-utils:7addbf5630418cea87bf66df33a05fdd57e43728
            script: |
              #!/usr/bin/env bash
              set -eux

              echo Test that result is contains the failed command
              grep "already exists" <<< "$(params.result)"

              echo Test that advisory_url was not set
              test -z "$(params.advisory_url)"
