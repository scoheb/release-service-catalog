---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: test-collect-collector-data
spec:
  description: |
    Run the collect-collector data task and verify that data has been migrated from .status to .data
  workspaces:
    - name: tests-workspace
  tasks:
    - name: setup
      workspaces:
        - name: data
          workspace: tests-workspace
      params:
        - name: subdirectory
          value: $(context.pipelineRun.uid)
      taskSpec:
        params:
          - name: subdirectory
            type: string
        steps:
          - name: create-crs
            image: quay.io/konflux-ci/release-service-utils:e633d51cd41d73e4b3310face21bb980af7a662f
            script: |
              #!/usr/bin/env bash
              set -eux

              cat > release << EOF
              apiVersion: appstudio.redhat.com/v1alpha1
              kind: Release
              metadata:
                name: release-sample
                namespace: default
              spec:
                snapshot: foo
                releasePlan: foo
              EOF
              kubectl apply -f release
              COLLECTOR_STATUS_JSON='{
                "managed": {
                  "cve-collector": {
                    "cves": [
                      {
                        "key": "CVE-123"
                      },
                      {
                        "key": "CVE-456"
                      }
                    ]
                  }
                },
                "tenant": {
                  "jira-collector": { 
                    "issues": [
                      {
                        "fixed": [
                          {
                            "id": "SCOTT-1ABCDEFG",
                            "source": "issues.example.com"
                          },
                          {
                            "id": "SCOTT-2ABCDEFG",
                            "source": "issues.example.com"
                          }
                        ]
                      }
                    ]
                  }
                }
              }'
              kubectl --warnings-as-errors=true patch "Release" -n "default" "release-sample" \
                --type=merge --subresource status --patch "status: {'collectors':${COLLECTOR_STATUS_JSON}}"

              cat > releaseplan << EOF
              apiVersion: appstudio.redhat.com/v1alpha1
              kind: ReleasePlan
              metadata:
                name: releaseplan-sample
                namespace: default
              spec:
                application: foo
                target: foo
              EOF
              kubectl apply -f releaseplan

              cat > releaseplanadmission << EOF
              apiVersion: appstudio.redhat.com/v1alpha1
              kind: ReleasePlanAdmission
              metadata:
                name: releaseplanadmission-sample
                namespace: default
              spec:
                applications:
                  - foo
                origin: foo
                policy: foo
                pipeline:
                  pipelineRef:
                    resolver: cluster
                    params:
                      - name: name
                        value: release-pipeline
                      - name: namespace
                        value: default
                      - name: kind
                        value: pipeline
              EOF
              kubectl apply -f releaseplanadmission

              mkdir -p "$(workspaces.data.path)/$(params.subdirectory)"
              echo '{ "releaseNotes": {} }' > "$(workspaces.data.path)/$(params.subdirectory)/data.json"
    - name: run-task
      taskRef:
        name: collect-collector-data
      params:
        - name: release
          value: default/release-sample
        - name: releasePlan
          value: default/releaseplan-sample
        - name: releasePlanAdmission
          value: default/releaseplanadmission-sample
        - name: subdirectory
          value: $(context.pipelineRun.uid)
      runAfter:
        - setup
      workspaces:
        - name: data
          workspace: tests-workspace
    - name: check-result
      params:
        - name: release
          value: default/release-sample
        - name: subdirectory
          value: $(context.pipelineRun.uid)
      workspaces:
        - name: data
          workspace: tests-workspace
      runAfter:
        - run-task
      taskSpec:
        params:
          - name: release
            type: string
          - name: subdirectory
            type: string
        workspaces:
          - name: data
        steps:
          - name: check-result
            image: quay.io/konflux-ci/release-service-utils:e633d51cd41d73e4b3310face21bb980af7a662f
            script: |
              #!/usr/bin/env bash
              set -eux

              RELEASE_NOTES_JSON='{"cves":[{"key":"CVE-123"},{"key":"CVE-456"}],"issues":[{"fixed":
                  [{"id":"SCOTT-1ABCDEFG","source":"issues.example.com"},{"id":"SCOTT-2ABCDEFG",
                  "source":"issues.example.com"}]}]}'
              RELEASE_NOTES_JSON_SORTED=$(jq --sort-keys '.' <<< "${RELEASE_NOTES_JSON}")
              
              echo "Test that ReleaseNotes are correct"
              releaseNotesData=$(jq --sort-keys '.releaseNotes' < "$(workspaces.data.path)/$(params.subdirectory)/data.json")
              
              diff <(echo $releaseNotesData) <(echo $RELEASE_NOTES_JSON_SORTED)

  finally:
    - name: cleanup
      taskSpec:
        steps:
          - name: delete-crs
            image: quay.io/konflux-ci/release-service-utils:e633d51cd41d73e4b3310face21bb980af7a662f
            script: |
              #!/usr/bin/env sh
              set -eux

              kubectl delete release release-sample
              kubectl delete releaseplan releaseplan-sample
              kubectl delete releaseplanadmission releaseplanadmission-sample
