---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: collect-collector-data
  labels:
    app.kubernetes.io/version: "0.0.1"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/tags: release
spec:
  description: >-
    Tekton task to collect all the collectors information in the Release status and merge it with the information
    in the data field
  params:
    - name: release
      type: string
      description: The namespaced name of the Release
    - name: releasePlan
      type: string
      description: The namespaced name of the ReleasePlan
    - name: releasePlanAdmission
      type: string
      description: The namespaced name of the ReleasePlanAdmission
    - name: subdirectory
      description: Subdirectory inside the workspace to be used
      type: string
      default: ""
  workspaces:
    - name: data
      description: Workspace to save the CR jsons to
  steps:
    - name: collect-collector-data
      image: quay.io/konflux-ci/release-service-utils:e633d51cd41d73e4b3310face21bb980af7a662f
      env:
        - name: "RELEASE"
          value: '$(params.release)'
        - name: "RELEASE_PLAN"
          value: '$(params.releasePlan)'
        - name: "RELEASE_PLAN_ADMISSION"
          value: '$(params.releasePlanAdmission)'
      script: |
        #!/usr/bin/env bash
        set -eo pipefail

        if [ -n "$(params.subdirectory)" ]; then
          mkdir -p "$(workspaces.data.path)/$(params.subdirectory)"
        fi

        RELEASE_PATH="$(params.subdirectory)/release.json"
        get-resource "release" "${RELEASE}" | tee "$(workspaces.data.path)/$RELEASE_PATH"

        collectorStatus=$(jq -c '.status.collectors // {}' "$(workspaces.data.path)/$RELEASE_PATH")

        # take all collectors from RPA
        managedCollectors=("cve-collector")
        # take all collectors from RP
        tenantCollectors=("jira-collector")
        
        # we want them to be in
        DATA_PATH="$(params.subdirectory)/data.json"
        data=$(jq . "$(workspaces.data.path)/$DATA_PATH")
        
        echo "getting status from managed collectors:"
        for collector in "${managedCollectors}"
        do
          echo "- $collector"
          collectorData=$(jq --arg collector "${collector}" -c '.managed[$collector] // {}' <<< "${collectorStatus}")
          collectorData=$(jq --argjson collectorData "${collectorData}" '.releaseNotes += $collectorData' <<< "{}")
          echo "${collectorData}"
          data=$(merge-json "$data" "$collectorData")
        done
        echo "getting status from tenant collectors:"
        for collector in "${tenantCollectors}"
        do
          echo "- $collector"
          collectorData=$(jq --arg collector "${collector}" -c '.tenant[$collector] // {}' <<< "${collectorStatus}")
          collectorData=$(jq --argjson collectorData "${collectorData}" '.releaseNotes += $collectorData' <<< "{}")
          echo "${collectorData}"
          data=$(merge-json "$data" "$collectorData")
        done

        echo "$data" | tee "$(workspaces.data.path)/$DATA_PATH"
