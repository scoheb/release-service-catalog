---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: push-oot-kmods 
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/tags: release
spec:
  description: >-
    Task to upload out-of-tree kernel modules to private vendor repo
  params:
    - name: signedKmodsPath 
      type: string
      description: Path where the kernel modules are stored in the workspace
    - name: vendor
      type: string
      description: vendor of the kernel modules
    - name: artifactRepoUrl
      type: string
      description: Repository URL where the signed modules will be pushed
    - name: artifactBranch
      type: string
      default: main
      description: Specific branch in the repository
    - name: artifactRepoToken
      type: string
      description: Secret containing the Project Access Token for the artifact repos
    - name: ociStorage
      description: The OCI repository where the Trusted Artifacts are stored
      type: string
      default: "empty"
    - name: ociArtifactExpiresAfter
      description: Expiration date for the trusted artifacts created in the
        OCI repository. An empty string means the artifacts do not expire
      type: string
      default: "1d"
    - name: trustedArtifactsDebug
      description: Flag to enable debug logging in trusted artifacts. Set to a non-empty string to enable
      type: string
      default: ""
    - name: orasOptions
      description: oras options to pass to Trusted Artifacts calls
      type: string
      default: ""
    - name: sourceDataArtifact
      type: string
      description: Location of trusted artifacts to be used to populate data directory
      default: ""
    - name: dataDir
      description: The location where data will be stored
      type: string
      default: /var/workdir/release
    - name: taskGitUrl
      type: string
      description: The git repository URL for task and StepAction resolution
      default: https://github.com/konflux-ci/release-service-catalog.git
    - name: taskGitRevision
      type: string
      description: The git revision for task and StepAction resolution
      default: main
  results:
    - name: sourceDataArtifact
      type: string
      description: Produced trusted data artifact
  volumes:
    - name: workdir
      emptyDir: {}
  stepTemplate:
    volumeMounts:
      - mountPath: /var/workdir
        name: workdir
    env:
      - name: IMAGE_EXPIRES_AFTER
        value: $(params.ociArtifactExpiresAfter)
      - name: "ORAS_OPTIONS"
        value: "$(params.orasOptions)"
      - name: "DEBUG"
        value: "$(params.trustedArtifactsDebug)"
  steps:
    - name: use-trusted-artifact
      computeResources:
        limits:
          memory: 64Mi
        requests:
          memory: 64Mi
          cpu: 30m
      ref:
        resolver: "git"
        params:
          - name: url
            value: $(params.taskGitUrl)
          - name: revision
            value: $(params.taskGitRevision)
          - name: pathInRepo
            value: stepactions/use-trusted-artifact/use-trusted-artifact.yaml
      params:
        - name: workDir
          value: $(params.dataDir)
        - name: sourceDataArtifact
          value: $(params.sourceDataArtifact)
    - name: push-signed-files
      image: quay.io/konflux-ci/release-service-utils:0f82be4be43294b6a96846d87ef7f7c0b9e34267
      computeResources:
        limits:
          memory: 512Mi
        requests:
          memory: 512Mi
          cpu: 250m 
      env:
        - name: PUSH_TOKEN
          valueFrom:
            secretKeyRef:
              name: $(params.artifactRepoToken)
              key: gitlab-gr-maintenance-token
      script: |
        #!/usr/bin/env sh
        SIGNED_KMODS_PATH="$(params.dataDir)/$(params.signedKmodsPath)"
        REPO_URL="$(params.artifactRepoUrl)"
        echo "PATH: ${SIGNED_KMODS_PATH} to ${REPO_URL}"
        mkdir -p "${SIGNED_KMODS_PATH}"
        cd "${SIGNED_KMODS_PATH}" || exit 1
        git lfs install

        ## Add token to URL
        PUSH_TOKEN_CLEAN=$(printf "%s" "$PUSH_TOKEN" | tr -d '\n')
        GIT_URL_WITH_AUTH="https://gitlab-ci-token:${PUSH_TOKEN_CLEAN}@${REPO_URL}"
        
        git clone "$GIT_URL_WITH_AUTH" local-artifacts
        # Create directory with vendor/versions and move signed modules there
        # shellcheck source=/dev/null
        . ./envfile
        mkdir -p "local-artifacts/${DRIVER_VENDOR}_${DRIVER_VERSION}_${KERNEL_VERSION}" 
        mv -- *.ko "local-artifacts/${DRIVER_VENDOR}_${DRIVER_VERSION}_${KERNEL_VERSION}/"
        rm envfile
       
        cd local-artifacts || exit 1
        git checkout main
        git config --global user.email "partner-accelerators@konflux-ci.redhat.com"
        git config --global user.name "Partner Accelerators CI Bot"
  
        git add .
        git commit -m "Automated push from Build and Sign pipeline"
        git push -u origin main
    - name: create-trusted-artifact
      computeResources:
        limits:
          memory: 128Mi
        requests:
          memory: 128Mi
          cpu: 250m
      ref:
        resolver: "git"
        params:
          - name: url
            value: $(params.taskGitUrl)
          - name: revision
            value: $(params.taskGitRevision)
          - name: pathInRepo
            value: stepactions/create-trusted-artifact/create-trusted-artifact.yaml
      params:
        - name: ociStorage
          value: $(params.ociStorage)
        - name: workDir
          value: $(params.dataDir)
        - name: sourceDataArtifact
          value: $(results.sourceDataArtifact.path)
