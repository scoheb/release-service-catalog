---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: test-update-ocp-tag-no-placeholder
spec:
  description: |
    Run the update-ocp-tag task with sample values without the {{ OCP_VERSION }} placeholder
    and verify that all tags keeps the OCP version.
  workspaces:
    - name: tests-workspace
  params:
    - name: ociStorage
      description: The OCI repository where the Trusted Artifacts are stored.
      type: string
    - name: ociArtifactExpiresAfter
      description: Expiration date for the trusted artifacts created in the
        OCI repository. An empty string means the artifacts do not expire.
      type: string
      default: "1d"
    - name: orasOptions
      description: oras options to pass to Trusted Artifacts calls
      type: string
      default: "--insecure"
    - name: trustedArtifactsDebug
      description: Flag to enable debug logging in trusted artifacts. Set to a non-empty string to enable.
      type: string
      default: ""
    - name: dataDir
      description: The location where data will be stored
      type: string
  tasks:
    - name: setup
      workspaces:
        - name: data
          workspace: tests-workspace
      taskSpec:
        results:
          - name: sourceDataArtifact
            type: string
        workspaces:
          - name: data
        volumes:
          - name: workdir
            emptyDir: {}
        stepTemplate:
          volumeMounts:
            - mountPath: /var/workdir
              name: workdir
          env:
            - name: IMAGE_EXPIRES_AFTER
              value: $(params.ociArtifactExpiresAfter)
            - name: "ORAS_OPTIONS"
              value: "$(params.orasOptions)"
            - name: "DEBUG"
              value: "$(params.trustedArtifactsDebug)"
        steps:
          - name: setup-values
            image: quay.io/konflux-ci/release-service-utils:e633d51cd41d73e4b3310face21bb980af7a662f
            script: |
              #!/usr/bin/env sh
              set -eux

              mkdir -p "$(params.dataDir)/$(context.pipelineRun.uid)"
              cat > "$(params.dataDir)/$(context.pipelineRun.uid)/data.json" << EOF
              {
                "fbc": {
                  "fromIndex": "registry-proxy.engineering.redhat.com/rh-osbs/iib-preview-rhtap:v4.13",
                  "targetIndex": "quay.io/redhat/redhat----preview-operator-index:v4.13"
                }
              }
              EOF
          - name: skip-trusted-artifact-operations
            ref:
              name: skip-trusted-artifact-operations
            params:
              - name: ociStorage
                value: $(params.ociStorage)
              - name: workDir
                value: $(params.dataDir)
          - name: create-trusted-artifact
            ref:
              name: create-trusted-artifact
            params:
              - name: ociStorage
                value: $(params.ociStorage)
              - name: workDir
                value: $(params.dataDir)
              - name: sourceDataArtifact
                value: $(results.sourceDataArtifact.path)
          - name: patch-source-data-artifact-result
            ref:
              name: patch-source-data-artifact-result
            params:
              - name: ociStorage
                value: $(params.ociStorage)
              - name: sourceDataArtifact
                value: $(results.sourceDataArtifact.path)
    - name: run-task
      taskRef:
        name: update-ocp-tag
      params:
        - name: dataPath
          value: $(context.pipelineRun.uid)/data.json
        - name: ocpVersion
          value: "v4.13"
        - name: ociStorage
          value: $(params.ociStorage)
        - name: orasOptions
          value: $(params.orasOptions)
        - name: sourceDataArtifact
          value: "$(tasks.setup.results.sourceDataArtifact)=$(params.dataDir)"
        - name: dataDir
          value: $(params.dataDir)
        - name: trustedArtifactsDebug
          value: $(params.trustedArtifactsDebug)
        - name: taskGitUrl
          value: "http://localhost"
        - name: taskGitRevision
          value: "main"
      runAfter:
        - setup
      workspaces:
        - name: data
          workspace: tests-workspace
    - name: check-result
      workspaces:
        - name: data
          workspace: tests-workspace
      params:
        - name: updated-fromIndex
          value: $(tasks.run-task.results.updated-fromIndex)
        - name: updated-targetIndex
          value: $(tasks.run-task.results.updated-targetIndex)
        - name: sourceDataArtifact
          value: "$(tasks.run-task.results.sourceDataArtifact)=$(params.dataDir)"
        - name: dataDir
          value: $(params.dataDir)
      runAfter:
        - run-task
      taskSpec:
        workspaces:
          - name: data
        params:
          - name: updated-fromIndex
            type: string
          - name: updated-targetIndex
            type: string
          - name: sourceDataArtifact
            type: string
          - name: dataDir
            type: string
        volumes:
          - name: workdir
            emptyDir: {}
        stepTemplate:
          volumeMounts:
            - mountPath: /var/workdir
              name: workdir
          env:
            - name: IMAGE_EXPIRES_AFTER
              value: $(params.ociArtifactExpiresAfter)
            - name: "ORAS_OPTIONS"
              value: "$(params.orasOptions)"
            - name: "DEBUG"
              value: "$(params.trustedArtifactsDebug)"
        steps:
          - name: skip-trusted-artifact-operations
            ref:
              name: skip-trusted-artifact-operations
            params:
              - name: ociStorage
                value: $(params.ociStorage)
              - name: workDir
                value: $(params.dataDir)
          - name: use-trusted-artifact
            ref:
              name: use-trusted-artifact
            params:
              - name: workDir
                value: $(params.dataDir)
              - name: sourceDataArtifact
                value: $(params.sourceDataArtifact)
          - name: check-result
            image: quay.io/konflux-ci/release-service-utils:e633d51cd41d73e4b3310face21bb980af7a662f
            env:
              - name: "UPDATED_FROMINDEX"
                value: '$(params.updated-fromIndex)'
              - name: "UPDATED_TARGETINDEX"
                value: '$(params.updated-targetIndex)'
            script: |
              #!/usr/bin/env sh
              set -eux

              echo "Validate all tags got updated to v4.13"
              test "$UPDATED_FROMINDEX" == \
              "registry-proxy.engineering.redhat.com/rh-osbs/iib-preview-rhtap:v4.13"
              test "$UPDATED_TARGETINDEX" == "quay.io/redhat/redhat----preview-operator-index:v4.13"
