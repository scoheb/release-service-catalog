---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: test-create-advisory-overwrite-type
spec:
  description: |
    Run the create-advisory task with a releaseNotes.type that is not RHSA, but CVEs present in releaseNotes.
    The type should be overwritten to RHSA.
  workspaces:
    - name: tests-workspace
  tasks:
    - name: setup
      taskSpec:
        steps:
          - name: create-crs
            image: quay.io/konflux-ci/release-service-utils:0f82be4be43294b6a96846d87ef7f7c0b9e34267
            script: |
              #!/usr/bin/env bash
              set -eux

              mkdir "$(workspaces.data.path)"/results
              
              cat > "$(workspaces.data.path)"/test_release_plan_admission.json << EOF
              {
                "apiVersion": "appstudio.redhat.com/v1alpha1",
                "kind": "ReleasePlanAdmission",
                "metadata": {
                  "name": "test",
                  "namespace": "default"
                },
                "spec": {
                  "applications": [
                    "app"
                  ],
                  "policy": "policy",
                  "pipeline": {
                    "pipelineRef": {
                      "resolver": "git",
                      "params": [
                        {
                          "name": "url",
                          "value": "github.com"
                        },
                        {
                          "name": "revision",
                          "value": "main"
                        },
                        {
                          "name": "pathInRepo",
                          "value": "pipeline.yaml"
                        }
                      ]
                    },
                    "serviceAccountName": "sa"
                  },
                  "origin": "dev"
                }
              }
              EOF

              cat > "$(workspaces.data.path)"/test_snapshot_spec.json << EOF
              {
                "application": "myapp",
                "components": [
                  {
                    "name": "comp",
                    "repository": "quay.io/redhat-prod/repo"
                  }
                ]
              }
              EOF

              cat > "$(workspaces.data.path)"/data.json << EOF
              {
                "releaseNotes": {
                  "type": "RHEA",
                  "content": {
                    "images": [
                      {
                        "containerImage": "foo",
                        "cves": {
                          "fixed": {
                            "CVE-123": {
                              "components": [
                                "pkg:rpm/foo"
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "sign": {
                  "configMapName": "cm"
                }
              }
              EOF
      workspaces:
        - name: data
          workspace: tests-workspace
    - name: run-task
      taskRef:
        name: create-advisory
      params:
        - name: releasePlanAdmissionPath
          value: "test_release_plan_admission.json"
        - name: snapshotPath
          value: "test_snapshot_spec.json"
        - name: dataPath
          value: "data.json"
        - name: resultsDirPath
          value: "results"
        - name: synchronously
          value: "false"
        - name: pipelineRunUid
          value: $(context.pipelineRun.uid)
        - name: taskGitUrl
          value: "http://localhost"
        - name: taskGitRevision
          value: "main"
      runAfter:
        - setup
      workspaces:
        - name: data
          workspace: tests-workspace
    - name: check-result
      workspaces:
        - name: data
          workspace: tests-workspace
      runAfter:
        - run-task
      taskSpec:
        workspaces:
          - name: data
        steps:
          - name: check-result
            image: quay.io/konflux-ci/release-service-utils:0f82be4be43294b6a96846d87ef7f7c0b9e34267
            script: |
              #!/usr/bin/env bash
              set -ex

              # Count the number of InternalRequests
              requestsCount=$(kubectl get InternalRequest -o json | jq -r '.items | length')
              
              # Check if the number of InternalRequests is as expected
              if [ "$requestsCount" -ne 1 ]; then
                echo "Unexpected number of InternalRequests. Expected: 1, Found: $requestsCount"
                exit 1
              fi

              internalRequest=$(kubectl get InternalRequest -o json | jq -r '.items[0]')

              # Check if the 'pipelineRef' field contains the 'create-advisory' pipeline
              if [[ "$(echo "$internalRequest" | jq -r '.spec.pipeline.pipelineRef.params[2].value' )" != \
              "pipelines/internal/create-advisory"* ]]; then
                echo "InternalRequest doesn't contain 'create-advisory' in 'pipeline' field"
                exit 1 
              fi

              # Check the advisory_json parameter
              if [[ "$(echo "$internalRequest" | jq -r '.spec.params.advisory_json' )" != \
              '{"type":"RHSA"'* ]]; then
                echo "The advisory_json should have had its type overwritten to RHSA because there were CVEs"
                echo "in the releaseNotes. However, it was not"
                exit 1
              fi

              # Check the taskGitUrl parameter
              if [ "$(echo "$internalRequest" | jq -r '.spec.params.taskGitUrl' )" != "http://localhost" ]; then
                echo "InternalRequest has the wrong taskGitUrl parameter"
                exit 1
              fi

              # Check the taskGitRevision parameter
              if [ "$(echo "$internalRequest" | jq -r '.spec.params.taskGitRevision' )" != "main" ]; then
                echo "InternalRequest has the wrong taskGitRevision parameter"
                exit 1
              fi
  finally:
    - name: cleanup
      taskSpec:
        steps:
          - name: delete-crs
            image: quay.io/konflux-ci/release-service-utils:0f82be4be43294b6a96846d87ef7f7c0b9e34267
            script: |
              #!/usr/bin/env bash
              set -eux

              kubectl delete internalrequests --all
