---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: test-push-rpm-data-to-pyxis-no-pyxis-file
  annotations:
    test/assert-task-failure: "run-task"
spec:
  description: |
    Run the push-rpm-data-to-pyxis task with no pyxis file provided in the workspace.
    This should result in a failure.
  params:
    - name: ociStorage
      description: The OCI repository where the Trusted Artifacts are stored.
      type: string
    - name: ociArtifactExpiresAfter
      description: Expiration date for the trusted artifacts created in the
        OCI repository. An empty string means the artifacts do not expire.
      type: string
      default: "1d"
    - name: orasOptions
      description: oras options to pass to Trusted Artifacts calls
      type: string
      default: "--insecure"
    - name: trustedArtifactsDebug
      description: Flag to enable debug logging in trusted artifacts. Set to a non-empty string to enable.
      type: string
      default: ""
    - name: dataDir
      description: The location where data will be stored
      type: string
  tasks:
    - name: setup
      params:
        - name: subdirectory
          value: $(context.pipelineRun.uid)
      taskSpec:
        results:
          - name: sourceDataArtifact
            type: string
        params:
          - name: subdirectory
            type: string
        volumes:
          - name: workdir
            emptyDir: {}
        stepTemplate:
          volumeMounts:
            - mountPath: /var/workdir
              name: workdir
          env:
            - name: IMAGE_EXPIRES_AFTER
              value: $(params.ociArtifactExpiresAfter)
            - name: "ORAS_OPTIONS"
              value: "$(params.orasOptions)"
            - name: "DEBUG"
              value: "$(params.trustedArtifactsDebug)"
        steps:
          - name: setup-values
            image: quay.io/konflux-ci/release-service-utils:34016ab5a3904257c198a12d1829b0093214b6ee
            script: |
              #!/usr/bin/env bash
              set -eux

              mkdir -p "$(params.dataDir)"
    - name: run-task
      taskRef:
        name: push-rpm-data-to-pyxis
      params:
        - name: pyxisJsonPath
          value: $(context.pipelineRun.uid)/missing.json
        - name: pyxisSecret
          value: test-push-rpm-data-to-pyxis-cert
        - name: server
          value: production
        - name: ociStorage
          value: $(params.ociStorage)
        - name: orasOptions
          value: $(params.orasOptions)
        - name: sourceDataArtifact
          value: ""
        - name: subdirectory
          value: $(context.pipelineRun.uid)
        - name: dataDir
          value: $(params.dataDir)
        - name: trustedArtifactsDebug
          value: $(params.trustedArtifactsDebug)
        - name: taskGitUrl
          value: "http://localhost"
        - name: taskGitRevision
          value: "main"
      runAfter:
        - setup
