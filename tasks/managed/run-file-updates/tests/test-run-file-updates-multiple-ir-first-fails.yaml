---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: test-run-file-updates-multiple-ir-first-fails
spec:
  description: |
    Run the run-file-updates task for the osd-addons use case with multiple IR requests
    which has the first one failing. Ensure the result shows the MR from the 1st passing
    request and that an error is surfaced for the failing one
  workspaces:
    - name: tests-workspace
  tasks:
    - name: setup
      taskSpec:
        steps:
          - name: create-crs
            image: quay.io/konflux-ci/release-service-utils:0f82be4be43294b6a96846d87ef7f7c0b9e34267
            script: |
              #!/usr/bin/env sh
              set -eux
              
              yq -o json > "$(workspaces.data.path)/rpa.json" << EOF
              apiVersion: appstudio.redhat.com/v1alpha1
              kind: ReleasePlanAdmission
              metadata:
                name: releaseplanadmission-sample
                namespace: default
              spec:
                application: foo
                origin: foo
                data:
                  fileUpdates:
                    - repo: https://gitlab.cee.redhat.com/foobar1
                      file_updates_secret: mysecret
                      ref: fail2
                      paths:
                        - path: foobar
                          replacements:
                            - key: ".indexImage"
                              replacement: "|indexImage:.*|indexImage: {{ .components[].repository }}|"
                            - key: ".name"
                              replacement: "|name:.*|name: myName|"
                    - repo: https://gitlab.cee.redhat.com/foobar2
                      file_updates_secret: mysecret
                      paths:
                        - path: foobar
                          replacements:
                            - key: ".indexImage"
                              replacement: "|indexImage:.*|indexImage: {{ .components[].repository }}|"
                            - key: ".name"
                              replacement: "|name:.*|name: myName|"
              EOF

              mkdir "$(workspaces.data.path)/results"
              yq -o json > "$(workspaces.data.path)/snapshot_spec.json" << EOF
              {
                  "application": "foo-app",
                  "artifacts": {},
                  "components": [
                      {
                          "containerImage": "test-container-foo@sha256:729",
                          "name": "test-container-foo",
                          "source": {
                              "git": {
                                  "context": "./",
                                  "dockerfileUrl": "build/Dockerfile",
                                  "revision": "foo",
                                  "url": "https://github.com/foo/bar"
                              }
                          },
                          "repository": "test/foo/bar"
                      }]
              }
              EOF
      workspaces:
        - name: data
          workspace: tests-workspace
    - name: run-task
      taskRef:
        name: run-file-updates
      onError: continue
      params:
        - name: fileUpdatesPath
          value: "rpa.json"
        - name: synchronously
          value: "false"
        - name: pipelineRunUid
          value: $(context.pipelineRun.uid)
        - name: snapshotPath
          value: snapshot_spec.json
        - name: dataPath
          value: ""
        - name: resultsDirPath
          value: results
        - name: taskGitUrl
          value: "http://localhost"
        - name: taskGitRevision
          value: "main"
      runAfter:
        - setup
      workspaces:
        - name: data
          workspace: tests-workspace
    - name: check-result
      workspaces:
        - name: data
          workspace: tests-workspace
      runAfter:
        - run-task
      params:
        - name: result
          value: $(tasks.run-task.results.mergeRequestUrl)
      taskSpec:
        params:
          - name: result
            type: string
        workspaces:
          - name: data
        steps:
          - name: check-result
            image: quay.io/konflux-ci/release-service-utils:0f82be4be43294b6a96846d87ef7f7c0b9e34267
            script: |
              #!/bin/bash
              set -ex

              # Fetch all the InternalRequest resources
              allRequests=$(kubectl get InternalRequest -o json)

              # Count the number of InternalRequests
              requestsCount=$(echo "$allRequests" | jq -r '.items | length')

              # Check if the number of InternalRequests is as expected
              if [ "$requestsCount" -ne "1" ]; then
                echo "Unexpected number of InternalRequests. Expected: 1, Found: $requestsCount"
                exit 1
              fi

              failedIr=$(echo "$allRequests" | \
                              jq -r '.items[] | select(.spec.params.ref == "fail2")')
              passedIr=$(echo "$allRequests" | \
                              jq -r '.items[] | select(.spec.params.ref == "main")')

              #request 1 passes
              state=$(echo "$passedIr" | jq '.status.results.buildState')
              echo "Test no requests are successful"
              test "${state}" == ""
              state=$(echo "$failedIr" | jq '.status.results.buildState')
              echo "Test 2nd request has failed"
              test "${state}" == "\"Failed\""
              
              echo "Test result should have no MRs in it"
              MR=$(tr '\n' ' ' <<< "$(params.result)" | xargs)
              test "$MR" == ""

          - name: delete-crs
            image: quay.io/konflux-ci/release-service-utils:0f82be4be43294b6a96846d87ef7f7c0b9e34267
            script: |
              #!/usr/bin/env bash
              set -eux

              kubectl delete internalrequests --all
