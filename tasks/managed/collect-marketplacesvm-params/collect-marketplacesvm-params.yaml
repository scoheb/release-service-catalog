---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: collect-marketplacesvm-params
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/tags: release
spec:
  description: >-
    Tekton task that collects the secret for the cloud marketplaces from the data file
  params:
    - name: dataPath
      type: string
      description: Path to the merged data JSON file generated by collect-data task
    - name: ociStorage
      type: string
      description: The OCI repository where the Trusted Artifacts are stored
    - name: ociArtifactExpiresAfter
      type: string
      description: >
        Expiration date for the trusted artifacts created in the OCI repository
        An empty string means the artifacts do not expire
        The format is YYYY-MM-DD
      default: ""
    - name: orasOptions
      type: string
      description: oras options to pass to Trusted Artifacts calls
      default: ""
    - name: sourceDataArtifact
      type: string
      description: >
        The Trusted Artifact URI pointing to the artifact with the application snapshot spec and the release data
    - name: dataDir
      type: string
      description: The location where data will be stored
    - name: trustedArtifactsDebug
      type: string
      description: Flag to enable debug logging in trusted artifacts. Set to a non-empty string to enable
      default: ""
    - name: taskGitUrl
      type: string
      description: The url to the git repo where the release-service-catalog tasks to be used are stored
    - name: taskGitRevision
      type: string
      description: The revision in the taskGitUrl repo to be used
  workspaces:
    - name: data
      description: The workspace where the data json file resides
  results:
    - name: cloudMarketplacesSecret
      type: string
      description: "The base64 encoded secret to use for various cloud marketplaces."
    - name: prePush
      type: string
      description: "Whether perform a pre-push (true) or not (false). When true it will not publish PROD."
    - name: sourceDataArtifact
      type: string
      description: >
        The Trusted Artifact URI pointing to the artifact with the application snapshot spec and the release data
  volumes:
    - name: workdir
      emptyDir: {}
  stepTemplate:
    volumeMounts:
      - mountPath: /var/workdir
        name: workdir
    env:
      - name: IMAGE_EXPIRES_AFTER
        value: $(params.ociArtifactExpiresAfter)
      - name: "ORAS_OPTIONS"
        value: "$(params.orasOptions)"
      - name: "DEBUG"
        value: "$(params.trustedArtifactsDebug)"
  steps:
    - name: skip-trusted-artifact-operations
      computeResources:
        limits:
          memory: 32Mi
        requests:
          memory: 32Mi
          cpu: 20m
      ref:
        resolver: git
        params:
          - name: url
            value: $(params.taskGitUrl)
          - name: revision
            value: $(params.taskGitRevision)
          - name: pathInRepo
            value: stepactions/skip-trusted-artifact-operations/skip-trusted-artifact-operations.yaml
      params:
        - name: ociStorage
          value: $(params.ociStorage)
        - name: workDir
          value: $(params.dataDir)
    - name: use-trusted-artifact
      computeResources:
        limits:
          memory: 64Mi
        requests:
          memory: 64Mi
          cpu: 30m
      ref:
        resolver: git
        params:
          - name: url
            value: $(params.taskGitUrl)
          - name: revision
            value: $(params.taskGitRevision)
          - name: pathInRepo
            value: stepactions/use-trusted-artifact/use-trusted-artifact.yaml
      params:
        - name: workDir
          value: $(params.dataDir)
        - name: sourceDataArtifact
          value: $(params.sourceDataArtifact)
    - name: collect-marketplacesvm-params
      image:
        quay.io/konflux-ci/release-service-utils:6556e8a6b031c1aad4f0472703fd121a6e1cd45d
      workingDir: $(params.dataDir)
      computeResources:
        limits:
          memory: 128Mi
        requests:
          memory: 128Mi
          cpu: 50m
      script: |
        #!/usr/bin/env bash
        set -eux

        DATA_FILE="$(params.dataDir)/$(params.dataPath)"
        if [ ! -f "${DATA_FILE}" ] ; then
            echo "No valid data file was provided."
            exit 1
        fi

        if [ "$(jq '.mapping | has("cloudMarketplacesSecret")' "$DATA_FILE")" == false ] ; then
            echo "Marketplaces secret missing in data JSON file"
            exit 1
        fi

        jq -j '.mapping.cloudMarketplacesSecret' "$DATA_FILE" | tee "$(results.cloudMarketplacesSecret.path)"
        jq -j '.mapping.cloudMarketplacesPrePush // false' "$DATA_FILE" | tee > "$(results.prePush.path)"
    - name: create-trusted-artifact
      computeResources:
        limits:
          memory: 128Mi
        requests:
          memory: 128Mi
          cpu: 250m
      ref:
        resolver: git
        params:
          - name: url
            value: $(params.taskGitUrl)
          - name: revision
            value: $(params.taskGitRevision)
          - name: pathInRepo
            value: stepactions/create-trusted-artifact/create-trusted-artifact.yaml
      params:
        - name: ociStorage
          value: $(params.ociStorage)
        - name: workDir
          value: $(params.dataDir)
        - name: sourceDataArtifact
          value: $(results.sourceDataArtifact.path)
    - name: patch-source-data-artifact-result
      computeResources:
        limits:
          memory: 32Mi
        requests:
          memory: 32Mi
          cpu: 20m
      ref:
        resolver: git
        params:
          - name: url
            value: $(params.taskGitUrl)
          - name: revision
            value: $(params.taskGitRevision)
          - name: pathInRepo
            value: stepactions/patch-source-data-artifact-result/patch-source-data-artifact-result.yaml
      params:
        - name: ociStorage
          value: $(params.ociStorage)
        - name: sourceDataArtifact
          value: $(results.sourceDataArtifact.path)
