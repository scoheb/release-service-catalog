---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: test-embargo-check-rh-issue-missing-cve
  annotations:
    test/assert-task-failure: "run-task"
spec:
  description: |
    Test for embargo-check where a issues.redhat.com issue lists CVE-123 as a CVE, but the images
    section does not list CVE-123 for any component. The task should fail.
  workspaces:
    - name: tests-workspace
  params:
    - name: ociStorage
      description: The OCI repository where the Trusted Artifacts are stored.
      type: string
    - name: ociArtifactExpiresAfter
      description: Expiration date for the trusted artifacts created in the
        OCI repository. An empty string means the artifacts do not expire.
      type: string
      default: "1d"
    - name: orasOptions
      description: oras options to pass to Trusted Artifacts calls
      type: string
      default: "--insecure"
    - name: trustedArtifactsDebug
      description: Flag to enable debug logging in trusted artifacts. Set to a non-empty string to enable.
      type: string
      default: ""
    - name: dataDir
      description: The location where data will be stored
      type: string
  tasks:
    - name: setup
      params:
        - name: subdirectory
          value: $(context.pipelineRun.uid)
      workspaces:
        - name: data
          workspace: tests-workspace
      taskSpec:
        results:
          - name: sourceDataArtifact
            type: string
        params:
          - name: subdirectory
            type: string
        workspaces:
          - name: data
        volumes:
          - name: workdir
            emptyDir: {}
        stepTemplate:
          volumeMounts:
            - mountPath: /var/workdir
              name: workdir
          env:
            - name: IMAGE_EXPIRES_AFTER
              value: $(params.ociArtifactExpiresAfter)
            - name: "ORAS_OPTIONS"
              value: "$(params.orasOptions)"
            - name: "DEBUG"
              value: "$(params.trustedArtifactsDebug)"
            - name: "HOME"
              value: "/tekton/home"
        steps:
          - name: setup-values
            image: quay.io/konflux-ci/release-service-utils:10bd7e4323de6ace107bbed1fe40613f21684b01
            script: |
              #!/usr/bin/env sh
              set -eux

              mkdir -p "$(params.dataDir)/$(params.subdirectory)"
              cat > "$(params.dataDir)/$(params.subdirectory)/data.json" << EOF
              {
                "releaseNotes": {
                  "issues": {
                    "fixed": [
                      {
                        "id": "VULN-123",
                        "source": "issues.redhat.com"
                      },
                      {
                        "id": "12345",
                        "source": "bugzilla.redhat.com"
                      }
                    ]
                  },
                  "content": {
                    "images": [
                      {
                        "component": "my-component",
                        "architecture": "x86_64",
                        "containerImage": "registry.io/org/repo",
                        "cves": {
                          "fixed": {
                            "CVE-987": {
                              "packages": []
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
              EOF
          - name: skip-trusted-artifact-operations
            ref:
              name: skip-trusted-artifact-operations
            params:
              - name: ociStorage
                value: $(params.ociStorage)
              - name: subdirectory
                value: $(params.subdirectory)
              - name: dataDir
                value: $(params.dataDir)
          - name: create-trusted-artifact
            ref:
              name: create-trusted-artifact
            params:
              - name: ociStorage
                value: $(params.ociStorage)
              - name: dataDir
                value: $(params.dataDir)
              - name: subdirectory
                value: $(params.subdirectory)
              - name: sourceDataArtifact
                value: $(results.sourceDataArtifact.path)
          - name: patch-source-data-artifact-result
            ref:
              name: patch-source-data-artifact-result
            params:
              - name: ociStorage
                value: $(params.ociStorage)
              - name: sourceDataArtifact
                value: $(results.sourceDataArtifact.path)
    - name: run-task
      taskRef:
        name: embargo-check
      params:
        - name: dataPath
          value: $(context.pipelineRun.uid)/data.json
        - name: pipelineRunUid
          value: $(context.pipelineRun.uid)
        - name: taskGitUrl
          value: "http://localhost"
        - name: taskGitRevision
          value: "main"
        - name: ociStorage
          value: $(params.ociStorage)
        - name: orasOptions
          value: $(params.orasOptions)
        - name: sourceDataArtifact
          value: "$(tasks.setup.results.sourceDataArtifact)=$(params.dataDir)/$(context.pipelineRun.uid)"
        - name: subdirectory
          value: $(context.pipelineRun.uid)
        - name: dataDir
          value: $(params.dataDir)
        - name: trustedArtifactsDebug
          value: $(params.trustedArtifactsDebug)
      workspaces:
        - name: data
          workspace: tests-workspace
      runAfter:
        - setup
