---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: test-collect-data-fail-disallowed-releaseplan
  annotations:
    test/assert-task-failure: "run-task"
spec:
  params:
    - name: ociStorage
      description: The OCI repository where the Trusted Artifacts are stored.
      type: string
    - name: ociArtifactExpiresAfter
      description: Expiration date for the trusted artifacts created in the
        OCI repository. An empty string means the artifacts do not expire.
      type: string
      default: "1d"
    - name: orasOptions
      description: oras options to pass to Trusted Artifacts calls
      type: string
      default: "--insecure"
    - name: trustedArtifactsDebug
      description: Flag to enable debug logging in trusted artifacts. Set to a non-empty string to enable.
      type: string
      default: ""
    - name: dataDir
      description: The location where data will be stored
      type: string
  description: |
    Run the collect-data task with the disallowed key allow_custom_live_id in the ReleasePlan data.
  tasks:
    - name: setup
      taskSpec:
        volumes:
          - name: workdir
            emptyDir: {}
        stepTemplate:
          volumeMounts:
            - mountPath: /var/workdir
              name: workdir
          env:
        steps:
          - name: setup
            image: quay.io/konflux-ci/release-service-utils:e633d51cd41d73e4b3310face21bb980af7a662f
            script: |
              #!/usr/bin/env bash
              set -eux

              cat > release << EOF
              apiVersion: appstudio.redhat.com/v1alpha1
              kind: Release
              metadata:
                name: release-disallowed-rp-sample
                namespace: default
              spec:
                snapshot: foo
                releasePlan: foo
                data:
                  releaseNotes:
                    issues:
                      - id: issue1
                        source: github.com
                      - id: issue2
                        source: github.com
              EOF
              kubectl apply -f release

              cat > releaseplan << EOF
              apiVersion: appstudio.redhat.com/v1alpha1
              kind: ReleasePlan
              metadata:
                name: releaseplan-disallowed-rp-sample
                namespace: default
              spec:
                application: foo
                target: foo
                data:
                  releaseNotes:
                    synopsis: some text field
                    allow_custom_live_id: true
              EOF
              kubectl apply -f releaseplan

              cat > releaseplanadmission << EOF
              apiVersion: appstudio.redhat.com/v1alpha1
              kind: ReleasePlanAdmission
              metadata:
                name: releaseplanadmission-disallowed-rp-sample
                namespace: default
              spec:
                applications:
                  - foo
                origin: foo
                policy: foo
                pipeline:
                  pipelineRef:
                    resolver: cluster
                    params:
                      - name: name
                        value: release-pipeline
                      - name: namespace
                        value: default
                      - name: kind
                        value: pipeline
                data:
                  releaseNotes:
                    product_id: 123
              EOF
              kubectl apply -f releaseplanadmission

              cat > releaseserviceconfig << EOF
              apiVersion: appstudio.redhat.com/v1alpha1
              kind: ReleaseServiceConfig
              metadata:
                name: releaseserviceconfig-disallowed-rp-sample
                namespace: default
              spec:
              EOF
              kubectl apply -f releaseserviceconfig

              cat > snapshot << EOF
              apiVersion: appstudio.redhat.com/v1alpha1
              kind: Snapshot
              metadata:
                name: snapshot-disallowed-rp-sample
                namespace: default
              spec:
                application: foo
                components:
                  - name: name
                    containerImage: newimage
              EOF
              kubectl apply -f snapshot
    - name: run-task
      taskRef:
        name: collect-data
      params:
        - name: release
          value: default/release-disallowed-rp-sample
        - name: releasePlan
          value: default/releaseplan-disallowed-rp-sample
        - name: releasePlanAdmission
          value: default/releaseplanadmission-disallowed-rp-sample
        - name: releaseServiceConfig
          value: default/releaseserviceconfig-disallowed-rp-sample
        - name: snapshot
          value: default/snapshot-disallowed-rp-sample
        - name: ociStorage
          value: $(params.ociStorage)
        - name: dataDir
          value: $(params.dataDir)
        - name: trustedArtifactsDebug
          value: $(params.trustedArtifactsDebug)
        - name: taskGitUrl
          value: "http://localhost"
        - name: taskGitRevision
          value: "main"
      runAfter:
        - setup
  finally:
    - name: cleanup
      taskSpec:
        steps:
          - name: delete-crs
            image: quay.io/konflux-ci/release-service-utils:e633d51cd41d73e4b3310face21bb980af7a662f
            script: |
              #!/usr/bin/env sh
              set -eux

              kubectl delete release release-disallowed-rp-sample
              kubectl delete releaseplan releaseplan-disallowed-rp-sample
              kubectl delete releaseplanadmission releaseplanadmission-disallowed-rp-sample
              kubectl delete releaseserviceconfig releaseserviceconfig-disallowed-rp-sample
              kubectl delete snapshot snapshot-disallowed-rpsample
