---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: test-check-data-keys-invalid-issues-in-releasenotes-key
  annotations:
    test/assert-task-failure: "run-task"
spec:
  description: |
    Run the check-data-keys task with an incorrect field in the releaseNotes.issues key
    (using cves instead of fixed) and verify that the task failed.
  params:
    - name: ociStorage
      description: The OCI repository where the Trusted Artifacts are stored.
      type: string
    - name: ociArtifactExpiresAfter
      description: Expiration date for the trusted artifacts created in the
        OCI repository. An empty string means the artifacts do not expire.
      type: string
      default: "1d"
    - name: orasOptions
      description: oras options to pass to Trusted Artifacts calls
      type: string
      default: "--insecure"
    - name: trustedArtifactsDebug
      description: Flag to enable debug logging in trusted artifacts. Set to a non-empty string to enable.
      type: string
      default: ""
    - name: dataDir
      description: The location where data will be stored
      type: string
  tasks:
    - name: setup
      taskSpec:
        results:
          - name: sourceDataArtifact
            type: string
        volumes:
          - name: workdir
            emptyDir: {}
        stepTemplate:
          volumeMounts:
            - mountPath: /var/workdir
              name: workdir
          env:
            - name: IMAGE_EXPIRES_AFTER
              value: $(params.ociArtifactExpiresAfter)
            - name: "ORAS_OPTIONS"
              value: "$(params.orasOptions)"
            - name: "DEBUG"
              value: "$(params.trustedArtifactsDebug)"
        steps:
          - name: setup
            image: quay.io/konflux-ci/release-service-utils:e633d51cd41d73e4b3310face21bb980af7a662f
            script: |
              #!/usr/bin/env sh
              set -eux

              mkdir -p "$(params.dataDir)/$(context.pipelineRun.uid)"
              cat > "$(params.dataDir)/$(context.pipelineRun.uid)/data.json" << EOF
              {
                "releaseNotes": {
                  "product_id": [
                    123
                  ],
                  "product_name": "Red Hat Openstack Product",
                  "product_version": "1.2.3",
                  "product_stream": "rhtas-tp1",
                  "cpe": "cpe:/a:example:openstack:el8",
                  "type": "RHSA",
                  "cves": [
                    {
                      "key": "CVE-123",
                      "component": "my-component-1"
                    },
                    {
                      "key": "CVE-456",
                      "component": "my-component-2",
                      "packages": ["my-package1", "my-package2"]
                    },
                    {
                      "key": "CVE-789",
                      "component": "my-component-3",
                      "packages": []
                    }
                  ],
                  "issues": {
                    "cves": [
                      {
                        "id": "RHOSP-12345",
                        "source": "issues.example.com"
                      },
                      {
                        "id": "1234567",
                        "source": "bugzilla.example.com"
                      }
                    ]
                  },
                  "content": {
                    "images": [
                      {
                        "containerImage": "quay.io/example/openstack@sha256:abcde",
                        "repository": "rhosp16-rhel8/openstack",
                        "tags": ["latest"],
                        "architecture": "amd64",
                        "signingKey": "abcde",
                        "purl": "pkg:example/openstack@sha256:abcde?repository_url=quay.io/example/rhosp16-rhel8",
                        "cves": {
                          "fixed": {
                            "CVE-2022-1234": {
                              "packages": ["pkg:golang/golang.org/x/net/http2@1.11.1"]
                            }
                          }
                        }
                      }
                    ]
                  },
                  "synopsis": "test synopsis",
                  "topic": "test topic",
                  "description": "test description",
                  "solution": "test solution",
                  "references": ["https://docs.example.com/some/example/release-notes"]
                }
              }
              EOF
          - name: create-trusted-artifact
            ref:
              name: create-trusted-artifact
            params:
              - name: ociStorage
                value: $(params.ociStorage)
              - name: workDir
                value: $(params.dataDir)
              - name: sourceDataArtifact
                value: $(results.sourceDataArtifact.path)
    - name: run-task
      taskRef:
        name: check-data-keys
      params:
        - name: dataPath
          value: $(context.pipelineRun.uid)/data.json
        - name: systems
          value: |
            [
              {"systemName": "releaseNotes", "dynamic": false}
            ]
        - name: ociStorage
          value: $(params.ociStorage)
        - name: orasOptions
          value: $(params.orasOptions)
        - name: sourceDataArtifact
          value: "$(tasks.setup.results.sourceDataArtifact)=$(params.dataDir)"
        - name: dataDir
          value: $(params.dataDir)
        - name: trustedArtifactsDebug
          value: $(params.trustedArtifactsDebug)
        - name: taskGitUrl
          value: "http://localhost"
        - name: taskGitRevision
          value: "main"
      runAfter:
        - setup
