---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: check-data-keys
  labels:
    app.kubernetes.io/version: "1.0.2"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/tags: release
spec:
  description: >-
    Tekton task to check that all required information is present to use the specified system(s) 
    and the data is valid against the schema.
  params:
    - name: dataPath
      description: Path to the JSON string of the merged data to use
      type: string
    - name: schema
      description: URL to the JSON schema file to validate the data against
      type: string
      default: https://raw.githubusercontent.com/konflux-ci/release-service-catalog/refs/heads/development/schema/dataKeys.json
    - name: systems
      description: The systems to check that all data keys are present for
      type: array
      default: []
    - name: ociStorage
      description: The OCI repository where the Trusted Artifacts are stored.
      type: string
    - name: ociArtifactExpiresAfter
      description: Expiration date for the trusted artifacts created in the
        OCI repository. An empty string means the artifacts do not expire.
      type: string
      default: "1d"
    - name: sourceDataArtifact
      type: string
    - name: subdirectory
      description: Subdirectory inside the workspace to be used
      type: string
      default: ""
  workspaces:
    - name: data
      description: The workspace where the data JSON file resides
  results:
    - description: Produced trusted data artifact
      name: sourceDataArtifact
      type: string
  steps:
    - name: skip-trusted-artifact-operations
      image: quay.io/konflux-ci/release-service-utils:e633d51cd41d73e4b3310face21bb980af7a662f
      script: |
        #!/usr/bin/env bash
        set -eo pipefail

        if [ "$(params.ociStorage)" == "empty" ]; then
          echo "oci storage not detected via params.ociStorage ... skipping trusted artifacts tasks"
          touch "$(workspaces.data.path)/$(params.subdirectory)/.skip-trusted-artifacts"
        fi
    - name: use-trusted-artifact
      args:
        - use
        - $(params.sourceDataArtifact)=$(workspaces.data.path)/$(params.subdirectory)
      env:
        - name: "ORAS_OPTIONS"
          value: "--insecure"
        - name: "HOME"
          value: "/tekton/home"
      computeResources: {}
      image: quay.io/redhat-appstudio/build-trusted-artifacts:latest@sha256:ff35e09ff5c89e54538b50abae241a765b2b7868f05d62c4835bebf0978f3659
    - name: check-data-keys
      image: quay.io/konflux-ci/release-service-utils:9089cafbf36bb889b4b73d8c2965613810f13736
      args: ["$(params.systems[*])"]
      env:
        - name: "SCHEMA_FILE"
          value: "$(params.schema)"
      script: |
        #!/usr/bin/env bash
        set -ex

        if [ ! -f "$(workspaces.data.path)/$(params.dataPath)" ] ; then
            echo "No data JSON was provided."
            exit 1
        fi
        cat "$(workspaces.data.path)/$(params.dataPath)"

        schema="${SCHEMA_FILE/\.git\///}"
        if ! curl -sL --fail-with-body "$schema" -o /tmp/schema ; then
            echo "Failed to download schema file: $schema"
            exit 1
        fi

        systemsJSON=$(echo "$@" | jq -R 'split(" ")')

        jq --argjson systems "$systemsJSON" '.systems += $systems' \
            "$(workspaces.data.path)/$(params.dataPath)" > "/tmp/systems" 
        mv "/tmp/systems" "$(workspaces.data.path)/$(params.dataPath)"

        cat "$(workspaces.data.path)/$(params.dataPath)"
        check-jsonschema --output-format=text --schemafile "/tmp/schema"  "$(workspaces.data.path)/$(params.dataPath)"
    - name: create-trusted-artifact
      args:
        - create
        - --store
        - $(params.ociStorage)
        - $(results.sourceDataArtifact.path)=$(workspaces.data.path)/$(params.subdirectory)
      computeResources: {}
      image: quay.io/redhat-appstudio/build-trusted-artifacts:latest@sha256:ff35e09ff5c89e54538b50abae241a765b2b7868f05d62c4835bebf0978f3659
      env:
        - name: IMAGE_EXPIRES_AFTER
          value: $(params.ociArtifactExpiresAfter)
        - name: "ORAS_OPTIONS"
          value: "--insecure"
        - name: "HOME"
          value: "/tekton/home"
    - name: patch-source-data-artifact-result
      image: quay.io/konflux-ci/release-service-utils:e633d51cd41d73e4b3310face21bb980af7a662f
      script: |
        #!/usr/bin/env bash
        set -eu

        # this is needed to skip trusted-artifacts tasks
        # when using PVC based workspaces.
        if [ "$(params.ociStorage)" == "empty" ]; then
          echo -n "$(params.ociStorage)" > "$(results.sourceDataArtifact.path)"
        fi
