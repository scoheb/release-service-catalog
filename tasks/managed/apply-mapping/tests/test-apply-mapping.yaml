---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: test-apply-mapping
spec:
  description: |
    Run the apply-mapping task with a snapshot.spec json and a custom mapping provided in
    the data json file and verify that the resulting json contains the expected values.
  workspaces:
    - name: tests-workspace
  params:
    - name: ociStorage
      description: The OCI repository where the Trusted Artifacts are stored.
      type: string
  tasks:
    - name: setup
      workspaces:
        - name: data
          workspace: tests-workspace
      taskSpec:
        results:
          - name: SOURCE_DATA_ARTIFACT
            type: string
        workspaces:
          - name: data
        steps:
          - name: setup-values
            image: quay.io/konflux-ci/release-service-utils:d320c36f3d707cd5bfe55fe783f70236c06cc2e5
            script: |
              #!/usr/bin/env sh
              set -eux

              cat > "$(workspaces.data.path)/test_data.json" << EOF
              {
                "mapping": {
                  "components": [
                    {
                      "name": "comp1",
                      "repository": "repo1"
                    },
                    {
                      "name": "comp2",
                      "repository": "repo2"
                    },
                    {
                      "name": "comp3",
                      "repository": "repo3a"
                    },
                    {
                      "name": "comp4",
                      "customfield": "custom"
                    }
                  ]
                }
              }
              EOF

              cat > "$(workspaces.data.path)/test_snapshot_spec.json" << EOF
              {
                "application": "myapp",
                "components": [
                  {
                    "name": "comp1",
                    "containerImage": "imageurl1@sha256:123456",
                    "source": {
                      "git": {
                        "revision": "myrev",
                        "url": "myurl"
                      }
                    }
                  },
                  {
                    "name": "comp3",
                    "containerImage": "imageurl3@sha256:123456",
                    "repository": "repo3"
                  },
                  {
                    "name": "comp4",
                    "containerImage": "imageurl4@sha256:123456",
                    "repository": "repo4"
                  },
                  {
                    "name": "comp5",
                    "containerImage": "imageurl5@sha256:123456"
                  }
                ]
              }
              EOF
          - name: create-trusted-artifact
            args:
              - create
              - --store
              - $(params.ociStorage)
              - $(results.SOURCE_DATA_ARTIFACT.path)=$(workspaces.data.path)
            computeResources: { }
            image: quay.io/redhat-appstudio/build-trusted-artifacts:latest@sha256:ff35e09ff5c89e54538b50abae241a765b2b7868f05d62c4835bebf0978f3659
            env:
              - name: IMAGE_EXPIRES_AFTER
                value: 1d
              - name: "ORAS_OPTIONS"
                value: "--insecure"
    - name: run-task
      taskRef:
        name: apply-mapping
      params:
        - name: snapshotPath
          value: test_snapshot_spec.json
        - name: dataPath
          value: test_data.json
        - name: ociStorage
          value: $(params.ociStorage)
        - name: SOURCE_DATA_ARTIFACT
          value: "$(tasks.setup.results.SOURCE_DATA_ARTIFACT)=$(workspaces.data.path)"
      runAfter:
        - setup
      workspaces:
        - name: data
          workspace: tests-workspace
    - name: check-result
      workspaces:
        - name: data
          workspace: tests-workspace
      params:
        - name: SOURCE_DATA_ARTIFACT
          value: "$(tasks.run-task.results.SOURCE_DATA_ARTIFACT)=$(workspaces.data.path)"
      runAfter:
        - run-task
      taskSpec:
        workspaces:
          - name: data
        params:
          - name: SOURCE_DATA_ARTIFACT
            type: string
        steps:
          - name: use-trusted-artifact
            args:
              - use
              - $(params.SOURCE_DATA_ARTIFACT)=$(workspaces.data.path)
            env:
              - name: "ORAS_OPTIONS"
                value: "--insecure"
            computeResources: {}
            image: quay.io/redhat-appstudio/build-trusted-artifacts:latest@sha256:ff35e09ff5c89e54538b50abae241a765b2b7868f05d62c4835bebf0978f3659
          - name: check-result
            image: quay.io/konflux-ci/release-service-utils:e633d51cd41d73e4b3310face21bb980af7a662f
            script: |
              #!/usr/bin/env sh
              set -eux

              echo Test that SNAPSHOT contains component comp1
              test "$(
                jq -r '[ .components[] | select(.name=="comp1") ] | length' \
                < "$(workspaces.data.path)/test_snapshot_spec.json"
              )" -eq 1

              echo Test that SNAPSHOT contains repository from the mapping file
              test "$(
                jq -r '.components[] | select(.name=="comp1") | .repository' \
                < "$(workspaces.data.path)/test_snapshot_spec.json"
              )" == repo1

              echo Test that SNAPSHOT does not contain component comp2
              test "$(
                jq -r '[ .components[] | select(.name=="comp2") ] | length' \
                < "$(workspaces.data.path)/test_snapshot_spec.json"
              )" -eq 0

              echo Test that repository of component comp3 was overridden by mapping file
              test "$(
                jq -r '.components[] | select(.name=="comp3") | .repository' \
                < "$(workspaces.data.path)/test_snapshot_spec.json"
              )" == repo3a

              echo Test that repository of component comp4 stayed intact
              test "$(
                jq -r '.components[] | select(.name=="comp4") | .repository' \
                < "$(workspaces.data.path)/test_snapshot_spec.json"
              )" == repo4

              echo Test that customfield of component comp4 was added to its snapshot entry
              test "$(
                jq -r '.components[] | select(.name=="comp4") | .customfield' \
                < "$(workspaces.data.path)/test_snapshot_spec.json"
              )" == custom

              echo Test that SNAPSHOT does not contain component comp5 as it was not included in the mapping file
              test "$(
                jq -r '[ .components[] | select(.name=="comp5") ] | length' \
                < "$(workspaces.data.path)/test_snapshot_spec.json"
              )" -eq 0
