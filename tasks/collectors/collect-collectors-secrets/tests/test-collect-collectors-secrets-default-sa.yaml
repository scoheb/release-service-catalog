---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: test-collect-collectors-secrets-default-sa
spec:
  description: |
    Run the collect-collectors-secrets task and verify that secrets linked to the default 
    tekton SA are made available
  workspaces:
    - name: tests-workspace
  tasks:
    - name: setup
      taskSpec:
        steps:
          - name: create-crs
            image: quay.io/konflux-ci/release-service-utils:e633d51cd41d73e4b3310face21bb980af7a662f
            script: |
              #!/usr/bin/env bash
              set -eux

              cat > "$(workspaces.data.path)/test_release_plan.json" << EOF
              {
                "apiVersion": "appstudio.redhat.com/v1alpha1",
                "kind": "ReleasePlan",
                "metadata": {
                  "name": "test-rp",
                  "namespace": "default"
                },
                "spec": {
                  "application": "app",
                  "collectors": {
                    "serviceAccountName": "tenant-collector-sa",
                    "items": [
                      {
                        "name": "test-collector",
                        "type": "dummy-collector",
                        "timeout": 600,
                        "params": [
                          {
                            "name": "test-arg",
                            "value": "test-value"
                          }
                        ]
                      }
                    ],
                    "target": "managed"
                  }
                }
              }
              EOF
      workspaces:
        - name: data
          workspace: tests-workspace
    - name: run-task
      taskRef:
        name: collect-collectors-secrets
      params:
        - name: collectorsPath
          value: test_release_plan.json
        - name: collectorsResourceType
          value: releaseplan
        - name: subdirectory
          value: $(context.pipelineRun.uid)
      runAfter:
        - setup
      workspaces:
        - name: data
          workspace: tests-workspace
    - name: check-result
      params:
        - name: subdirectory
          value: $(context.pipelineRun.uid)
      workspaces:
        - name: data
          workspace: tests-workspace
      runAfter:
        - run-task
      taskSpec:
        params:
          - name: subdirectory
            type: string
        workspaces:
          - name: data
        steps:
          - name: check-result
            image: quay.io/konflux-ci/release-service-utils:e633d51cd41d73e4b3310face21bb980af7a662f
            script: |
              #!/usr/bin/env bash
              set -eux

              if [ "$(find "$(workspaces.data.path)/$(params.subdirectory)/secrets/" -type d | wc -l)" -ne 3 ] ; then
                  echo "Two secret directories should exist, but that is not the case. Secret directories:"
                  find "$(workspaces.data.path)/$(params.subdirectory)/secrets/" -type d
                  exit 1
              fi

  finally:
    - name: cleanup
      taskSpec:
        steps:
          - name: delete-crs
            image: quay.io/konflux-ci/release-service-utils:e633d51cd41d73e4b3310face21bb980af7a662f
            script: |
              #!/usr/bin/env sh
              set -eux
